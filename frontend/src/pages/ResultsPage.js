import React, { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import axios from 'axios';
import './ResultsPage.css';

const ResultsPage = () => {
  const { videoId } = useParams();
  const [clips, setClips] = useState([]);
  const [metadata, setMetadata] = useState({});
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchClips = async () => {
      try {
        const response = await axios.get(`/api/clips/${videoId}`);
        setClips(response.data.clips || []);
        setMetadata(response.data.metadata || {});
        setLoading(false);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–ª–∏–ø–æ–≤:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–ª–∏–ø—ã.');
        setLoading(false);
      }
    };

    fetchClips();
  }, [videoId]);

  const handleDownload = (clipUrl) => {
    window.open(clipUrl, '_blank');
  };

  return (
    <div className="results-page">
      <div className="results-header">
        <h1>–ì–æ—Ç–æ–≤—ã–µ –∫–ª–∏–ø—ã</h1>
        <p>–ò–ò —Å–æ–∑–¥–∞–ª –¥–ª—è –≤–∞—Å —Å–ª–µ–¥—É—é—â–∏–µ –∫–ª–∏–ø—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ:</p>
      </div>

      {loading ? (
        <div className="loading-container">
          <div className="loading-spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∏–ø–æ–≤...</p>
        </div>
      ) : error ? (
        <div className="error-container">
          <div className="error-icon">‚ùå</div>
          <p>{error}</p>
          <Link to="/upload" className="btn">
            –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ
          </Link>
        </div>
      ) : clips.length === 0 ? (
        <div className="empty-container">
          <div className="empty-icon">üì≠</div>
          <p>–ö–ª–∏–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ.</p>
          <Link to="/upload" className="btn">
            –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ
          </Link>
        </div>
      ) : (
        <>
          {/* –°–µ–∫—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ */}
          <div className="video-info-container">
            <h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ</h2>
            <div className="video-info-card">
              <div className="video-info-section">
                <h3>–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ</h3>
                <p>{metadata.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</p>
              </div>
              
              <div className="video-info-section">
                <h3>–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ</h3>
                <p>{metadata.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
              </div>
              
              {metadata.hashtags && metadata.hashtags.length > 0 && (
                <div className="video-info-section">
                  <h3>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ö—ç—à—Ç–µ–≥–∏</h3>
                  <div className="hashtags-container">
                    {metadata.hashtags.map((tag, index) => (
                      <span key={index} className="hashtag">{tag}</span>
                    ))}
                  </div>
                </div>
              )}
              
              {metadata.contentPlan && metadata.contentPlan.length > 0 && (
                <div className="video-info-section">
                  <h3>–ö–æ–Ω—Ç–µ–Ω—Ç –ø–ª–∞–Ω</h3>
                  <div className="content-plan">
                    {metadata.contentPlan.map((item, index) => (
                      <div key={index} className="content-plan-item">
                        <div className="content-plan-date">{item.date}</div>
                        <div className="content-plan-content">{item.content}</div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </div>

          {/* –°–µ–∫—Ü–∏—è —Å –∫–ª–∏–ø–∞–º–∏ */}
          <div className="clips-container">
            {clips.map((clipUrl, index) => (
              <div className="clip-card" key={index}>
                <div className="clip-number">–ö–ª–∏–ø {index + 1}</div>
                <div className="clip-preview">
                  <video controls>
                    <source src={clipUrl} type="video/mp4" />
                    –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
                  </video>
                </div>
                <div className="clip-actions">
                  <button 
                    className="btn"
                    onClick={() => handleDownload(clipUrl)}
                  >
                    –°–∫–∞—á–∞—Ç—å
                  </button>
                </div>
              </div>
            ))}
          </div>
        </>
      )}

      <div className="results-footer">
        <p>–ü–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç? –ó–∞–≥—Ä—É–∑–∏—Ç–µ –µ—â–µ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –±–æ–ª—å—à–µ –∫–ª–∏–ø–æ–≤!</p>
        <Link to="/upload" className="btn btn-lg">
          –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ –∫–ª–∏–ø—ã
        </Link>
      </div>
    </div>
  );
};

export default ResultsPage;
